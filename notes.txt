to do - 
make background position fixed and with a fixed resolution, not necessarily covering the full window.

make the mists lift more slowly than the rest of the page scrolls.

fill in the rest of your content - portfolio, contacts, and about me "I'm trying to build a reputationi etc.



* you have foolishly set the height on some empty elements just to see them fill up space prematurely, before you've naturally bulked them up with content.  you also did it with grids and grid-row-template: 200px etc etc.  don't do that.  height arises naturally.  not prematurely.

add another fixed div under the header that fades into transparency so that we don't get that shitty sharp edget when you scroll down into the body.

just because display:block; has a strikethrough doesn't mean that display: block is not the case!  It only means it has been overrided.  it could have been overrided by A MORE SPECIFIC display:block!  see the "computed" section.

Remember - the parallax effect can be implemented in several different ways.  YOu can create a tall div with the a background-image set on it and position: fixed.  Then the background image is on that div alone, and you can have another parallax effect below it with a totally different background-image!

or you can put the background-image direct on the body of the page, fixed, and just create a big tall blank div that will scroll right over it like a window.  A tall, empty div is basically the same as a window.

Sadly, I can't remember why I so badly wanted to build my page useing the second method - what are the advantages?

z index is really really cool.  Just remember the x-y-z axes.  Its that.  stuff closer to the user (higher z-index) are in front of stuff behind the user.

remember - z-index only works if the element is positioned.

I don't get it but there is a world of difference between 
background: linear-gradient(red, rgba(255,0,0,0)); and 
background-image: linear-gradient(red, rgba(255,0,0,0));    see my .header.    WHY!?!?


There are lots of little things that you can't forget to do together, even if you don't know why.  like this - don't forget to include the grid-template-columns property!  grid-template-areas isn't enough, and the grid won't occupy the full width of the container unless you include grid-template-columns property!

  grid-template-columns: 1fr 1fr;
  grid-template-areas: 'title nav';


I'm learning things the hard way tonight - things like, "The project just don't work on mobile without 		

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1" />

I don't know why, it just don't work!"  so dont forget it!



I keep on getting screwy unexpected behavior with my position: fixed header.  This is because I don't expect it to act like a fixed element.  It is STUCK to the screen.  It is DIVORCED from its parent element, except perhaps that its position is in upper left corner of parent element by defaul, until you set top and left.   hmmmm....

woah.  you just learned a lot.  Are you gonna remember all this stuff?  REVIEW!!!!!





Nathan ....web development is just like fixing a bike.  It is all about diagnosing problems, which is a matter of following a thread, a line of thought, pulling on it and observing what happens, putting questions and new hypotheses in your stack and then taking them off the stack when they are resolved....it is absolutely brilliant.  It is what you have always loved to do more than anything.

So much of the talent is coming up with the right questions, so that I know the right things to stick in google.

example:

my fixed header wasn't working, it was utterly divorced from its parent element. I realized that I hadn't set top: 0 left: 0.  That was interesting.  did it.  can I set a margin?  So I did that too.  interesting.  can I center with margin: 0 auto? apparently not.  google it.  I CAN!!!  All that I have to do is first set top, left, AND right: 0.  then it all works.

"You can use margin: 0 auto with position: fixed if you set left and right.

.wrapper {
    position:fixed;
    top: 0;
    left: 0;
    right: 0;
    width: 500px;
    margin: 0 auto;
}
This also works with position: absolute; and vertically."


you need to offset the target of your menu links.  do this with a custom class .anchor and ids like "about-anchor" and "contact-anchor.  see in my code.  don't forget to adjust the offset when the media query kicks in.  also, I needed to apply pointer-events: none; to the high z-index images so that the button was visible through them.

I learned how to fade an image to transparent.  the magic code was this, applied to the image tag. it worked for me on my first divinehtml.com page.

-webkit-mask-image:-webkit-gradient(linear, left top, left bottom, from(rgba(0,0,0,1)), to(rgba(0,0,0,0)));
      mask-image: linear-gradient(to bottom, rgba(0,0,0,1), rgba(0,0,0,0));

https://stackoverflow.com/questions/19713813/fade-image-to-transparent-like-a-gradient



Why does the list style disappear when display: block is added to a list item in a list (<ul> or <ol>)?

That's because normally, display is set to list-item for <li> elements. See the W3C CSS3 specification: http://www.w3.org/TR/css3-lists/#declaring-a-list-item.

To declare a list item, the ‘display’ property should be set to ‘list-item’.

Note that you can give arbitrary HTML elements the same behaviour; set display: list-item on a <div> for example.


Display: inline-block
it is common to use inline-block to Create Navigation Links
One common use for display: inline-block is to display list items horizontally instead of vertically. The following example creates horizontal navigation links:

Example
.nav {
  background-color: yellow;
  list-style-type: none;
  text-align: center; 
  padding: 0;
  margin: 0;
}

.nav li {
  display: inline-block;
  font-size: 20px;
  padding: 20px;
}
